#!/usr/bin/python3

import http
import json
import socket

from charmhelpers.core import hookenv
from jaascharm import (
    update_config_and_restart,
    vault_auth_secret_path,
)


def vault_relation_changed():
    private_address = hookenv.relation_get('private-address')
    if not private_address:
        return
    hookenv.relation_set(
        secret_backend='charm-jimm',
        access_address=hookenv.unit_private_ip(),
        hostname=socket.gethostname(),
        isolated=False,
        unit_name=hookenv.local_unit(),
    )

    vault_url = 'http://' + private_address + ':8200'

    role_id = hookenv.relation_get(
        '{}_role_id'.format(hookenv.local_unit()))
    if not role_id:
        return
    role_id = json.loads(role_id)

    token = hookenv.relation_get('{}_token'.format(hookenv.local_unit()))
    if not token:
        return
    token = json.loads(token)
    secret_id = get_approle_secret_id(token, private_address)

    update_config_and_restart({'vault': {
        "address": vault_url,
        "approle-path": "/auth/approle",
        "approle-role-id": role_id,
        "approle-secret-id": secret_id,
        "kv-path": "/charm-jimm/",
    }})


def get_approle_secret_id(token, host, port=8200):
    c = http.client.HTTPConnection(host, port=port)
    header = {"X-Vault-Token": token}
    c.request("POST", "/v1/sys/wrapping/unwrap", headers=header)
    r = c.getresponse()
    if r.status != 200:
        return ""
    body = json.load(r)
    return body["data"]["secret_id"]


if __name__=='__main__':
    hookenv.log('vault-relation-changed')
    vault_relation_changed()
