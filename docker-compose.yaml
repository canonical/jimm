version: "3.9"

services:
  traefik:
    image: "traefik:2.9"
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8089:8080"
    volumes:
      - ./local/traefik/traefik.yaml:/etc/traefik/traefik.yaml
      - ./local/traefik/certs:/certs/
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: 
        - CMD
        - traefik
        - healthcheck
      interval: 10s
      timeout: 5s
      retries: 3
    
  jimm:
    image: cosmtrek/air
    profiles: ["dev"]
    # extra_hosts:
    # - "host.docker.internal:host-gateway"
    # working_dir value has to be the same of mapped volume
    hostname: jimm.localhost
    working_dir: /jimm
    container_name: jimmy
    ports:
      - 17070:80
    environment:
      JIMM_LOG_LEVEL: "debug"
      JIMM_UUID: "3217dbc9-8ea9-4381-9e97-01eab0b3f6bb"
      JIMM_DSN: "postgresql://jimm:jimm@db/jimm"
      CANDID_URL: "http://0.0.0.0:8081" # For external client redirects (in the case of compose and running outside)
      # Hardcoded pre-generated key, see ./local/candid/config.yaml
      CANDID_PUBLIC_KEY: "CIdWcEUN+0OZnKW9KwruRQnQDY/qqzVdD30CijwiWCk="
      # Not needed for local test (yet).
      # BAKERY_AGENT_FILE: ""
      JIMM_ADMINS: "jimm@candid.localhost"
      VAULT_ADDR: "http://vault:8200"
      VAULT_PATH: "/jimm-kv/"
      VAULT_SECRET_FILE: "/vault/approle.json"
      VAULT_AUTH_PATH: "/auth/approle/login"
      # JIMM_DASHBOARD_LOCATION: ""
      JIMM_DNS_NAME: "jimm.localhost"
      JIMM_WATCH_CONTROLLERS: ""
      JIMM_LISTEN_ADDR: "0.0.0.0:80"
      JIMM_TEST_PGXDSN: ""
      TEST_LOGGING_CONFIG: ""
    volumes:
      - ./:/jimm/
      - ./local/vault/approle.json:/vault/approle.json:rw
      - ./local/vault/roleid.txt:/vault/roleid.txt:rw
    healthcheck:
      test: [ "CMD", "curl", "http://jimm.localhost:80" ]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
      traefik:
        condition: service_healthy
    labels:
      traefik.enable: true
      traefik.http.routers.jimm.rule: Host(`jimm.localhost`)
      traefik.http.routers.jimm.entrypoints: websecure
      traefik.http.routers.jimm.tls: true

  db:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./local/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: jimm
      POSTGRES_USER: jimm
      POSTGRES_PASSWORD: jimm
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U jimm" ]
      interval: 5s
      timeout: 5s
      retries: 5

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - 8200:8200
    environment:
      # For CLI
      VAULT_ADDR: "http://localhost:8200"
      # Dev Flag
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      # Dev Flag
      VAULT_DEV_ROOT_TOKEN_ID: "token"
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: [ "CMD", "curl", "http://127.0.0.1:8200/v1/sys/health" ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./local/vault/vault.hcl:/vault/config/vault.hcl
      - ./local/vault/init.sh:/vault/init.sh
      - ./local/vault/policy.hcl:/vault/policy.hcl
      - ./local/vault/approle.json:/vault/approle.json
      - ./local/vault/roleid.txt:/vault/roleid.txt:rw
    command: /vault/init.sh
    depends_on:
      db:
        condition: service_healthy

  candid:
    image: candid:latest
    container_name: candid
    entrypoint: "/candid.sh"
    expose:
      - 8081
    ports:
      - 8081:8081
    volumes:
      - ./local/candid/config.yaml:/etc/candid/config.yaml
      - ./local/candid/entry.sh:/candid.sh
    depends_on:
      db:
        condition: service_healthy
      traefik:
          condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8081/debug/status" ]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:
      traefik.enable: true
      traefik.http.routers.candid.rule: Host(`candid.localhost`)
      traefik.http.routers.candid.entrypoints: websecure
      traefik.http.routers.candid.tls: true
