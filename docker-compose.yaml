services:
  traefik:
    image: "traefik:2.9"
    container_name: traefik
    profiles: ["dev", "test"]
    ports:
      - "80:80"
      - "443:443"
      - "8089:8080"
    volumes:
      - ./local/traefik/traefik.yaml:/etc/traefik/traefik.yaml
      - ./local/traefik/certs:/certs/
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: 
        - CMD
        - traefik
        - healthcheck
      interval: 10s
      timeout: 5s
      retries: 3
    
  # An instance of JIMM used in integration tests, pulled from a tag.
  jimm-test:
    extends:
      file: compose-common.yaml
      service: jimm-base
    image: ghcr.io/canonical/jimm:${JIMM_VERSION:-latest}
    profiles: ["test"]
    container_name: jimm-test
    ports:
      - 17070:80
    entrypoint:
      - bash
      - -c
      - >-
        apt update && apt install curl -y
        && /usr/local/bin/jimmsrv

  # An instance of JIMM used for dev, built from source with hot-reloading.
  jimm-dev:
    extends:
      file: compose-common.yaml
      service: jimm-base
    image: cosmtrek/air:latest
    profiles: ["dev"]
    # working_dir value has to be the same of mapped volume
    hostname: jimm.localhost
    working_dir: /jimm
    container_name: jimm
    entrypoint:
      - bash
      - -c
      - >-
        go install github.com/go-delve/delve/cmd/dlv@latest
        && air
    ports:
      - 17070:80
      - 2345:2345
    volumes:
      - ./:/jimm/

  db:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: jimm
      POSTGRES_USER: jimm
      POSTGRES_PASSWORD: jimm
    # Since it's mainly used for testing purposes, it's okay to set fsync=off for
    # improved performance.
    command: -c fsync=off -c full_page_writes=off
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U jimm" ]
      interval: 5s
      timeout: 5s
      retries: 5

  vault:
    build:
      context: ./local/vault/
      dockerfile: Dockerfile
    container_name: vault
    ports:
      - 8200:8200
    environment:
      VAULT_ADDR: "http://localhost:8200"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: "root"
    cap_add:
      - IPC_LOCK

  openfga:
    build:
      context: ./local/openfga/
      dockerfile: Dockerfile
    container_name: openfga
    environment:
      OPENFGA_AUTHN_METHOD: "preshared"
      OPENFGA_AUTHN_PRESHARED_KEYS: "jimm"
      OPENFGA_DATASTORE_ENGINE: "postgres"
      OPENFGA_DATASTORE_URI: "postgresql://jimm:jimm@db/jimm?sslmode=disable"
    volumes:
      - ./openfga/authorisation_model.json:/app/authorisation_model.json
    ports:
      - 8080:8080
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy

  keycloak:
    image: docker.io/bitnami/keycloak:23
    container_name: keycloak
    hostname: keycloak.localhost
    environment:
      KEYCLOAK_HTTP_PORT: 8082
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: true
      KEYCLOAK_CREATE_ADMIN_USER: true
      KEYCLOAK_ADMIN_USER: jimm
      KEYCLOAK_ADMIN_PASSWORD: jimm
      KEYCLOAK_DATABASE_VENDOR: dev-file
      KEYCLOAK_EXTRA_ARGS: "-Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=/bitnami/keycloak/data/import/realm.json -Dkeycloak.migration.replace-placeholders=true -Dkeycloak.profile.feature.upload_scripts=enabled"
    volumes:
      - ./local/keycloak/jimm-realm.json:/bitnami/keycloak/data/import/realm.json:ro
    ports:
      - "8082:8082"
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8082/health/ready" ]
      interval: 5s
      timeout: 10s
      retries: 30
