name: BuildJAASBundle
on:
  workflow_dispatch:

env:
  GH_USER: ${{ secrets.GH_USER }}
  GH_AUTH: ${{ secrets.GH_AUTH }}

jobs:
  BuildCandidCharm:
    runs-on: ubuntu-latest
    steps:
      - name: Build candid charm
        id: run_workflow
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: BuildCharm
          token: ${{ secrets.GH_AUTH }}
          inputs: '{"charm":"candid"}'
          ref: master
          repo: canonical/candid
          wait-for-completion: true
          display-workflow-run-url: true
      - name: Parse run id
        run: echo "RUN_ID=$(echo "${{ steps.run_workflow.outputs.workflow-url }}" | awk -F'/' '{print $8}')" >> $GITHUB_ENV
      - name: Set job id
        id: set-job-id
        run: echo "::set-output name=RUN_ID::${{ env.RUN_ID }}"
    outputs:
      run-id: ${{steps.set-job-id.outputs.RUN_ID}}
  BuildCandidK8SCharm:
    needs:
      - BuildCandidCharm
    runs-on: ubuntu-latest
    steps:
      - name: Build candid charm
        id: run_workflow
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: BuildCharm
          token: ${{ secrets.GH_AUTH }}
          inputs: '{"charm":"candid-k8s"}'
          ref: master
          repo: canonical/candid
          wait-for-completion: true
          display-workflow-run-url: true
      - name: Parse run id
        run: echo "RUN_ID=$(echo "${{ steps.run_workflow.outputs.workflow-url }}" | awk -F'/' '{print $8}')" >> $GITHUB_ENV
      - name: Set job id
        id: set-job-id
        run: echo "::set-output name=RUN_ID::${{ env.RUN_ID }}"
    outputs:
      run-id: ${{steps.set-job-id.outputs.RUN_ID}}
  BuildCandidSnap:
    runs-on: ubuntu-latest
    steps:
      - name: Build candid snap
        id: run_workflow
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: BuildSnap
          token: ${{ secrets.GH_AUTH }}
          ref: master
          repo: canonical/candid
          wait-for-completion: true
          display-workflow-run-url: true
      - name: Parse run id
        run: echo "RUN_ID=$(echo "${{ steps.run_workflow.outputs.workflow-url }}" | awk -F'/' '{print $8}')" >> $GITHUB_ENV
      - name: Set job id
        id: set-job-id
        run: echo "::set-output name=RUN_ID::${{ env.RUN_ID }}"
    outputs:
      run-id: ${{steps.set-job-id.outputs.RUN_ID}}
  BuildCandidImage:
    runs-on: ubuntu-latest
    steps:
      - name: Build candid image
        id: run_workflow
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: BuildOCIImage
          token: ${{ secrets.GH_AUTH }}
          ref: master
          repo: canonical/candid
          wait-for-completion: true
          display-workflow-run-url: true
      - name: Parse run id
        run: echo "RUN_ID=$(echo "${{ steps.run_workflow.outputs.workflow-url }}" | awk -F'/' '{print $8}')" >> $GITHUB_ENV
      - name: Set job id
        id: set-job-id
        run: echo "::set-output name=RUN_ID::${{ env.RUN_ID }}"
    outputs:
      run-id: ${{steps.set-job-id.outputs.RUN_ID}}
  BuildJIMMCharm:
    runs-on: ubuntu-latest
    steps:
      - name: Build jimm charm
        id: run_workflow
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: BuildCharm
          token: ${{ secrets.GH_AUTH }}
          inputs: '{"charm":"jimm"}'
          ref: develop
          repo: canonical/jimm
          wait-for-completion: true
          display-workflow-run-url: true
      - name: Parse run id
        run: echo "RUN_ID=$(echo "${{ steps.run_workflow.outputs.workflow-url }}" | awk -F'/' '{print $8}')" >> $GITHUB_ENV
      - name: Set job id
        id: set-job-id
        run: echo "::set-output name=RUN_ID::${{ env.RUN_ID }}"
    outputs:
      run-id: ${{steps.set-job-id.outputs.RUN_ID}}
  BuildJIMMK8SCharm:
    needs:
      - BuildJIMMCharm
    runs-on: ubuntu-latest
    steps:
      - name: Build jimm charm
        id: run_workflow
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: BuildCharm
          token: ${{ secrets.GH_AUTH }}
          inputs: '{"charm":"jimm-k8s"}'
          ref: develop
          repo: canonical/jimm
          wait-for-completion: true
          display-workflow-run-url: true
      - name: Parse run id
        run: echo "RUN_ID=$(echo "${{ steps.run_workflow.outputs.workflow-url }}" | awk -F'/' '{print $8}')" >> $GITHUB_ENV
      - name: Set job id
        id: set-job-id
        run: echo "::set-output name=RUN_ID::${{ env.RUN_ID }}"
    outputs:
      run-id: ${{steps.set-job-id.outputs.RUN_ID}}
  BuildJIMMSnap:
    runs-on: ubuntu-latest
    steps:
      - name: Build jimm snap
        id: run_workflow
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: BuildSnap
          token: ${{ secrets.GH_AUTH }}
          ref: develop
          repo: canonical/jimm
          wait-for-completion: true
          display-workflow-run-url: true
      - name: Parse run id
        run: echo "RUN_ID=$(echo "${{ steps.run_workflow.outputs.workflow-url }}" | awk -F'/' '{print $8}')" >> $GITHUB_ENV
      - name: Set job id
        id: set-job-id
        run: echo "::set-output name=RUN_ID::${{ env.RUN_ID }}"
    outputs:
      run-id: ${{steps.set-job-id.outputs.RUN_ID}}
  BuildJIMMImage:
    runs-on: ubuntu-latest
    steps:
      - name: Build jimm image
        id: run_workflow
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: BuildOCIImage
          token: ${{ secrets.GH_AUTH }}
          ref: develop
          repo: canonical/jimm
          wait-for-completion: true
          display-workflow-run-url: true
      - name: Parse run id
        run: echo "RUN_ID=$(echo "${{ steps.run_workflow.outputs.workflow-url }}" | awk -F'/' '{print $8}')" >> $GITHUB_ENV
      - name: Set job id
        id: set-job-id
        run: echo "::set-output name=RUN_ID::${{ env.RUN_ID }}"
    outputs:
      run-id: ${{steps.set-job-id.outputs.RUN_ID}}
  BuildTarball:
    needs:
      - BuildCandidCharm
      - BuildCandidK8SCharm
      - BuildCandidSnap
      - BuildCandidImage
      - BuildJIMMCharm
      - BuildJIMMK8SCharm
      - BuildJIMMSnap
      - BuildJIMMImage
    runs-on: ubuntu-latest
    steps:
      - run: mkdir -p build
      - name: Download Candid charm
        uses: benday-inc/download-artifact@main
        with:
          token: ${{ secrets.GH_AUTH }}
          repository_owner: "canonical"
          repository_name: "candid"
          artifact_name: "candid-charm"
          workflow_name: "BuildCharm"
          run_id: "${{ needs.BuildCandidCharm.outputs.run-id }}"
          download_path: "${{ github.workspace }}/build"
          download_filename: "candid.charm"
      - name: Download Candid k8s charm
        uses: benday-inc/download-artifact@main
        with:
          token: ${{ secrets.GH_AUTH }}
          repository_owner: "canonical"
          repository_name: "candid"
          artifact_name: "candid-k8s-charm"
          workflow_name: "BuildCharm"
          run_id: "${{ needs.BuildCandidK8SCharm.outputs.run-id }}"
          download_path: "${{ github.workspace }}/build"
          download_filename: "candid-k8s.charm"
      - name: Download Candid snap
        uses: benday-inc/download-artifact@main
        with:
          token: ${{ secrets.GH_AUTH }}
          repository_owner: "canonical"
          repository_name: "candid"
          artifact_name: "candid-snap"
          workflow_name: "BuildSnap"
          run_id: "${{ needs.BuildCandidSnap.outputs.run-id }}"
          download_path: "${{ github.workspace }}/build"
          download_filename: "candid.snap"
      - name: Download Candid image
        uses: benday-inc/download-artifact@main
        with:
          token: ${{ secrets.GH_AUTH }}
          repository_owner: "canonical"
          repository_name: "candid"
          artifact_name: "candid-image"
          workflow_name: "BuildOCIImage"
          run_id: "${{ needs.BuildCandidImage.outputs.run-id }}"
          download_path: "${{ github.workspace }}/build"
          download_filename: "candid-image.tar"
      - name: Download JIMM charm
        uses: benday-inc/download-artifact@main
        with:
          token: ${{ secrets.GH_AUTH }}
          repository_owner: "canonical"
          repository_name: "jimm"
          artifact_name: "jimm-charm"
          workflow_name: "BuildCharm"
          run_id: "${{ needs.BuildJIMMCharm.outputs.run-id }}"
          download_path: "${{ github.workspace }}/build"
          download_filename: "juju-jimm.charm"
      - name: Download JIMM k8s charm
        uses: benday-inc/download-artifact@main
        with:
          token: ${{ secrets.GH_AUTH }}
          repository_owner: "canonical"
          repository_name: "jimm"
          artifact_name: "jimm-k8s-charm"
          workflow_name: "BuildCharm"
          run_id: "${{ needs.BuildJIMMK8SCharm.outputs.run-id }}"
          download_path: "${{ github.workspace }}/build"
          download_filename: "juju-jimm-k8s.charm"
      - name: Download JIMM snap
        uses: benday-inc/download-artifact@main
        with:
          token: ${{ secrets.GH_AUTH }}
          repository_owner: "canonical"
          repository_name: "jimm"
          artifact_name: "jimm-snap"
          workflow_name: "BuildSnap"
          run_id: "${{ needs.BuildJIMMSnap.outputs.run-id }}"
          download_path: "${{ github.workspace }}/build"
          download_filename: "jimm.snap"
      - name: Download JIMM image
        uses: benday-inc/download-artifact@main
        with:
          token: ${{ secrets.GH_AUTH }}
          repository_owner: "canonical"
          repository_name: "jimm"
          artifact_name: "jimm-image"
          workflow_name: "BuildOCIImage"
          run_id: "${{ needs.BuildJIMMImage.outputs.run-id }}"
          download_path: "${{ github.workspace }}/build"
          download_filename: "jimm-image.tar"
      - run: tar czvf "${{ github.workspace }}/jaas-bundle.tar.gz" "${{ github.workspace }}/build"
      - uses: actions/upload-artifact@v3
        with:
          name: jaas-bundle
          path: ./*.tar.gz
          if-no-files-found: error
